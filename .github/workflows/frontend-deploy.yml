name: Deploy frontend to Render

on:
  workflow_run:
    workflows:
      - UI Tests Pipeline
    types:
      - completed
    secrets: inherit
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Check changes in Frontend
        uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            frontend:
              - 'frontend/**'

  frontend-deploy:
    needs: changes
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' && 
      github.event.workflow_run.head_branch == 'main' &&
      github.event.workflow_run.event == 'push' &&
      needs.changes.outputs.frontend == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Render
        run: |
          curl ${{ secrets.FRONTEND_RENDER_HOOK }}

      - name: Wait for application to be ready
        timeout-minutes: 10
        env:
          HEALTHCHECK_URL: ${{ secrets.FRONTEND_URL }}
        run: |
          ATTEMPT=1
          
          while true; do
            echo "Attempt #$ATTEMPT: Checking health endpoint at $HEALTHCHECK_URL..."
          
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $HEALTHCHECK_URL || true)
            echo "$RESPONSE"
          
            if $(RESPONSE=200); then
              echo "Service is up and healthy! Health check passed."
              exit 0
            else
              echo "Response: $RESPONSE"
              echo "Service is not available yet. Waiting 10 seconds before the next attempt..."
              sleep 10
            fi
          
            ATTEMPT=$((ATTEMPT + 1))
          done
          
          echo "Health check failed to pass within the timeout period."
          exit 1