name: Postman API Tests for Demo Service

on:
  workflow_call:
  workflow_dispatch:

jobs:
  authorization-service-ci:
    uses: ./.github/workflows/authorization-service-ci.yml
    secrets: inherit

  postman-tests-authorization-service:
    runs-on: ubuntu-latest

    needs: authorization-service-ci

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: local_app
          POSTGRES_PASSWORD: password
          POSTGRES_DB: authorization-db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Newman
        run: npm install -g newman

      - name: Install HTMLExtra
        run: npm install -g newman-reporter-htmlextra

      - name: Start Demo Service
        run: |
          chmod +x ./gradlew
          ./gradlew authorization-service:bootRun &
        working-directory: backend

      - name: Wait for application to be ready
        timeout-minutes: 5
        shell: bash
        run: |
          echo "Waiting for application to be ready..."
          while true; do
            HTTP_RESPONSE=$(curl -s -o response.txt -w "%{http_code}" http://localhost:8081/actuator/health)
            if [ $HTTP_RESPONSE -eq 200 ]; then
              STATUS=$(cat response.txt | jq -r '.status')
              if [ "$STATUS" = "UP" ]; then
                echo "Application is up and running!"
                exit 0
              fi
            fi
            echo "Application is not ready yet. Waiting 5 seconds..."
            sleep 5
          done

      - name: Wait for Backend Health Check
        run: sleep 20

      - name: Run Postman Tests
        run: |
          newman run "EWM - Authorization Service.postman_collection.json"\
          --reporters='cli,htmlextra' \
          --reporter-htmlextra-export ./results/report.html
        working-directory: postman-api-tests/authorization-service

      - name: Debug files
        run: ls -R

      - name: Upload Postman Report
        uses: actions/upload-artifact@v4
        with:
          name: postman-report-authorization-service
          path: postman-api-tests/authorization-service/results