name: Postman API Tests for Demo Service

on:
  workflow_call:
    secrets:
      JWT_PRIVATE_KEY:
        required: true
  workflow_dispatch:

jobs:
  authorization-service-ci:
    uses: ./.github/workflows/authorization-service-ci.yml
    secrets:
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}

  postman-tests-authorization-service:
    runs-on: ubuntu-latest

    needs: authorization-service-ci

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: local_app
          POSTGRES_PASSWORD: password
          POSTGRES_DB: authorization-db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Inject private key
        run: |
          echo "${{ secrets.JWT_PRIVATE_KEY }}" > backend/authorization-service/src/main/resources/private_key.pem

      - name: Start Authorization Service
        run: |
          chmod +x ./gradlew
          ./gradlew authorization-service:bootRun &
        working-directory: backend

      - name: Install Newman
        run: npm install -g newman

      - name: Install HTMLExtra
        run: npm install -g newman-reporter-htmlextra

      - name: Wait for application to be ready
        timeout-minutes: 2
        env:
          HEALTHCHECK_URL: http://localhost/actuator/health
        run: |
          ATTEMPT=1
          
          while true; do
            echo "Attempt #$ATTEMPT: Checking health endpoint at $HEALTHCHECK_URL..."
          
            RESPONSE=$(curl -s $HEALTHCHECK_URL || true)
          
            if echo "$RESPONSE" | grep -q '"status":"UP"'; then
              echo "Service is up and healthy! Health check passed."
              exit 0
            else
              echo "Service is not available yet. Waiting 10 seconds before the next attempt..."
              sleep 10
            fi
          
            ATTEMPT=$((ATTEMPT + 1))
          done
          
          echo "Health check failed to pass within the timeout period."
          exit 1

      - name: Run Postman Tests
        run: |
          newman run "EWM - Authorization Service.postman_collection.json" \
          --reporters='cli,htmlextra' \
          --reporter-htmlextra-export ./results/report.html
        working-directory: postman-api-tests/authorization-service

      - name: Upload Postman Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postman-report-authorization-service
          path: postman-api-tests/authorization-service/results