name: Postman API Tests for Demo Service

on:
  workflow_call:
    secrets:
      JWT_PRIVATE_KEY:
        required: true
  workflow_dispatch:

jobs:
  authorization-service-ci:
    uses: ./.github/workflows/authorization-service-ci.yml
    secrets:
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}

  postman-tests-authorization-service:
    runs-on: ubuntu-latest

    needs: authorization-service-ci

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: local_app
          POSTGRES_PASSWORD: password
          POSTGRES_DB: authorization-db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Inject private key
        run: |
          echo "${{ secrets.JWT_PRIVATE_KEY }}" > backend/authorization-service/src/main/resources/private_key.pem

      - name: Start Authorization Service
        run: |
          chmod +x ./gradlew
          ./gradlew authorization-service:bootRun &
        working-directory: backend

      - name: Install Newman
        run: npm install -g newman

      - name: Install HTMLExtra
        run: npm install -g newman-reporter-htmlextra

      - name: Wait for application to be ready
        timeout-minutes: 2
        shell: bash
        run: |
          attempt=1
          
          while [ true ]; do
            echo "Attempt $attempt of $max_attempts"
          
            # Use curl with additional flags to show connection errors
            response=$(curl -s -f -w "\n%{http_code}" "http://localhost:8081/actuator/health" 2>&1)
            curl_exit_code=$?
          
            if [ $curl_exit_code -ne 0 ]; then
              echo "Failed to connect: $response"
              echo "Curl exit code: $curl_exit_code"
            else
              http_code=$(echo "$response" | tail -n1)
              body=$(echo "$response" | sed '$d')
          
              echo "HTTP Status: $http_code"
              echo "Response body: $body"
          
              if [ "$http_code" = "200" ] && echo "$body" | grep -q '"status":"UP"'; then
                echo "Application is UP!"
                exit 0
              fi
            fi
          
            attempt=$((attempt + 1))
            echo "Application not ready yet, waiting..."
          
            echo "Checking if port 8081 is listening:"
            netstat -tulpn 2>/dev/null | grep ":8081" || echo "Port 8081 is not yet listening"
          
            sleep 10
          done
          
          echo "Timeout waiting for application to be ready"
          exit 1

      - name: Run Postman Tests
        run: |
          newman run "EWM - Authorization Service.postman_collection.json" \
          --reporters='cli,htmlextra' \
          --reporter-htmlextra-export ./results/report.html
        working-directory: postman-api-tests/authorization-service

      - name: Upload Postman Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postman-report-authorization-service
          path: postman-api-tests/authorization-service/results