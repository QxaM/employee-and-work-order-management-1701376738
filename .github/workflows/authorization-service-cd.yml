name: Authorization Service Deploy
on:
  workflow_run:
    workflows:
      - UI Tests Pipeline
    types:
      - completed
    secrets: inherit
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  authorization-service-deploy:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' && 
      github.event.workflow_run.head_branch == 'main' 

    ##      &&
    ##      github.event.workflow_run.event == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: ui-tests-ci.yml
          name: authorization-service-jar
          path: backend/authorization-service/build/libs
          github_token: '${{ github.token }}'

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./backend/authorization-service
          file: ./backend/authorization-service/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/authorization-service:0.0.1
            ${{ secrets.DOCKER_USERNAME }}/authorization-service:latest
          labels: authorization-service

      - name: Deploy to Render
        run: |
          curl ${{ secrets.AUTHORIZATION_RENDER_HOOK }}

      - name: Wait for application to be ready
        timeout-minutes: 10
        run: |
          attempt=1
          
          while [ true ]; do
            echo "Attempt $attempt"
          
            response=$(curl -s -w "\n%{http_code}" "${{ secrets.AUTHORIZATION_API_URL }}/actuator/health")
            http_code=$(echo "$response" | tail -n1)
            body=$(echo "$response" | sed '$d')
          
            echo "HTTP Status: $http_code"
            echo "Response body: $body"
          
            if [ "$http_code" = "200" ] && echo "$body" | grep -q '"status":"UP"'; then
              echo "Application is UP!"
              exit 0
            fi
          
            attempt=$((attempt + 1))
            echo "Application not ready yet, waiting..."
            sleep 10
          done
          
          echo "Timeout waiting for application to be ready"
          exit 1