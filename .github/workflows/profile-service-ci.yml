name: Profile Service CI Pipeline

on:
  workflow_call:
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      profile: ${{ steps.filter.outputs.any_modified || steps.filter.outputs.any_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check changes in frontend
        uses: tj-actions/changed-files@v46.0.5
        id: filter
        with:
          token: ${{ secrets.MAXQ_ACTION_PAT }}
          files: 'backend/profile-service/**'

      - name: Print changed files
        run: |
          echo ${{ steps.filter.outputs.all_changed_and_modified_files }}

  profile-service:
    needs: changes
    if: needs.changes.outputs.profile == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Make Gradle Wrapper Executable
        run: chmod +x ./backend/gradlew

      - name: Install dependencies
        run: ./gradlew clean profile-service:build -x test -x check -x assemble -x pmdMain -x pmdTest
        env:
          SPRING_PROFILES_ACTIVE: QA
        working-directory: backend

      - name: Run Lint Checks
        run: ./gradlew profile-service:check
        env:
          SPRING_PROFILES_ACTIVE: QA
        working-directory: backend

      - name: Run Unit Tests
        run: ./gradlew profile-service:test
        env:
          SPRING_PROFILES_ACTIVE: QA
        working-directory: backend

      - name: Build
        run: ./gradlew profile-service:assemble
        env:
          SPRING_PROFILES_ACTIVE: PROD
        working-directory: backend

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: profile-service-tests
          path: backend/profile-service/build/reports

      - name: Upload JAR file artifact
        uses: actions/upload-artifact@v4
        with:
          name: profile-service-jar
          path: |
            backend/profile-service/build/libs/profile-service-*.jar
            !backend/profile-service/build/libs/profile-service-*-plain.jar