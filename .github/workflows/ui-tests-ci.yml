name: UI Tests Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  frontend:
    uses: ./.github/workflows/frontend-ci.yml
    secrets: inherit

  api-tests:
    uses: ./.github/workflows/backend-api-tests.yml
    secrets:
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}

  ui-tests:
    runs-on: ubuntu-latest

    needs:
      - frontend
      - api-tests

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: local_app
          POSTGRES_PASSWORD: password
          POSTGRES_DB: authorization-db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Inject private key
        run: |
          echo "${{ secrets.JWT_PRIVATE_KEY }}" > backend/authorization-service/src/main/resources/private_key.pem

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: frontend

      - name: Install Backend Dependencies
        run: |
          chmod +x ./gradlew
          ./gradlew clean build
        working-directory: backend

      - name: Start Demo Service
        run: ./gradlew authorization-service:bootRun &
        working-directory: backend

      - name: Wait for application to be ready
        timeout-minutes: 2
        run: |
          attempt=1
          
          while [ true ]; do
            echo "Attempt $attempt"
          
            response=$(curl -s -w "\n%{http_code}" "http://localhost:8081/actuator/health")
            http_code=$(echo "$response" | tail -n1)
            body=$(echo "$response" | sed '$d')
          
            echo "HTTP Status: $http_code"
            echo "Response body: $body"
          
            if [ "$http_code" = "200" ] && echo "$body" | grep -q '"status":"UP"'; then
              echo "Application is UP!"
              exit 0
            fi
          
            attempt=$((attempt + 1))
            echo "Application not ready yet, waiting..."
            sleep 10
          done
          
          echo "Timeout waiting for application to be ready"
          exit 1

      - name: Build Frontend
        run: npm run build
        working-directory: frontend

      - name: Preview Frontend
        run: npm run preview &
        working-directory: frontend

      - name: Wait for services Health Check
        run: sleep 20

      - name: Run UI Tests
        run: |
          chmod +x ./gradlew
          ./gradlew test
        working-directory: uitests

      - name: Upload UI Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-report
          path: uitests/build/reports
