name: UI Tests Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      ui-tests: ${{ steps.filter.outputs.any_modified || steps.filter.outputs.any_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check changes in frontend
        uses: tj-actions/changed-files@v46.0.5
        id: filter
        with:
          token: ${{ secrets.MAXQ_ACTION_PAT }}
          files: |
            backend/**
            frontend/**
            uitests/**

      - name: Print changed files
        run: |
          echo ${{ steps.filter.outputs.all_changed_and_modified_files }}

  frontend:
    uses: ./.github/workflows/frontend-ci.yml
    secrets: inherit

  api-tests:
    uses: ./.github/workflows/backend-api-tests.yml
    secrets:
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
      ROBOT_JWT_PRIVATE_KEY: ${{ secrets.ROBOT_JWT_PRIVATE_KEY }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}

  ui-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [ 1, 2, 3, 4, 5, 6, 7, 8 ]
        shardTotal: [ 8 ]

    needs:
      - changes
      - frontend
      - api-tests

    if: needs.changes.outputs.ui-tests == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.17.1'

      - name: Docker Setup Compose
        uses: docker/setup-compose-action@v1.2.0

      - name: Download Discovery Service JAR
        uses: ./.github/actions/download-artifact
        with:
          artifact_name: discovery-service-jar
          path: backend/discovery-service/build/libs
          github_token: ${{ github.token }}

      - name: Download API Gateway Service JAR
        uses: ./.github/actions/download-artifact
        with:
          artifact_name: api-gateway-service-jar
          path: backend/api-gateway-service/build/libs
          github_token: ${{ github.token }}

      - name: Download Authorization Service JAR
        uses: ./.github/actions/download-artifact
        with:
          artifact_name: authorization-service-jar
          path: backend/authorization-service/build/libs
          github_token: ${{ github.token }}

      - name: Download profile Service JAR
        uses: ./.github/actions/download-artifact
        with:
          artifact_name: profile-service-jar
          path: backend/profile-service/build/libs
          github_token: ${{ github.token }}

      - name: Run Compose Containers
        run: docker compose up --build -d
        working-directory: backend
        env:
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          SPRING_PROFILES_ACTIVE: SIT

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: frontend

      - name: Wait for Discovery Service to be ready
        uses: './.github/actions/health-check'
        with:
          url: http://localhost:8761/actuator/health
          service_name: 'Discovery Service'

      - name: Wait for API Gateway Service to be ready
        uses: './.github/actions/health-check'
        with:
          url: http://localhost:8080/actuator/health
          service_name: 'API Gateway Service'

      - name: Wait for Authorization Service to be ready
        uses: './.github/actions/health-check'
        with:
          url: http://localhost:8081/actuator/health
          service_name: 'Authorization Service'

      - name: Wait for Profile Service to be ready
        uses: './.github/actions/health-check'
        with:
          url: http://localhost:8082/actuator/health
          service_name: 'Profile Service'

      - name: Build Frontend
        run: npm run build
        working-directory: frontend

      - name: Preview Frontend
        run: npm run dev &
        working-directory: frontend

      - name: Wait for services Health Check
        run: sleep 20

      - name: Inject private key
        run: |
          echo "ROBOT_TOKEN=${{ secrets.ROBOT_TOKEN }}" > uitests/test-data/private.env

      - name: Install tests dependencies
        run: npm ci
        working-directory: uitests

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: uitests

      - name: Run Playwright tests
        run: npm run test --- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        working-directory: uitests

      - name: Upload UI Test Report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: uitests/blob-report
          retention-days: 30

  ui-tests-summary:
    runs-on: ubuntu-latest
    needs:
      - changes
      - ui-tests
    if: always()

    steps:
      - name: UI Tests Summary
        run: |
          if [[ "${{ needs.changes.outputs.ui-tests }}" == "false" ]]; then
            echo "UI tests were skipped - no relevant changes detected"
            exit 0
          elif [[ "${{ needs.ui-tests.result }}" == "success" ]]; then
            echo "All UI tests passed successfully"
            exit 0
          elif [[ "${{ needs.ui-tests.result }}" == "skipped" ]]; then
            echo "UI tests were skipped"
            exit 0
          else
            echo "UI tests failed"
            exit 1
          fi

  merge-reports:
    if: success() || failure()
    needs:
      - ui-tests-summary
      - ui-tests

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        working-directory: uitests

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: uitests/all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npm run report:merge ./all-blob-reports
        working-directory: uitests

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: uitests/playwright-report
          retention-days: 30