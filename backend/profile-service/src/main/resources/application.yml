server:
  port: ${PORT:8082}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}

jwt:
  robot-public-key-path: classpath:/robot_public_key.pem

app:
  init: true

profile:
  queue:
    create: "authorization-profile-create-queue"
  exchange: "authorization-profile-exchange"
  topic:
    create: "profile.create"

spring:
  application:
    name: profile-service
  datasource:
    password: ${PROFILE_POSTGRES_PASS:password}
    url: ${PROFILE_POSTGRES_LINK:jdbc:postgresql://localhost:5433/profile-db?sslmode=disable}
    username: ${PROFILE_POSTGRES_USER:local_app}
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: update
    show-sql: true
  rabbitmq:
    host: ${AUTHORIZATION_PROFILE_RABBITMQ_HOST:localhost}
    port: ${AUTHORIZATION_PROFILE_RABBITMQ_PORT:5672}
    username: ${AUTHORIZATION_PROFILE_RABBITMQ_USERNAME:local_app}
    password: ${AUTHORIZATION_PROFILE_RABBITMQ_PASSWORD:password}
    virtual-host: ${AUTHORIZATION_PROFILE_RABBITMQ_VIRTUAL_HOST:/}

---

spring:
  config:
    activate:
      on-profile: QA
management:
  health:
    rabbit:
      enabled: false
eureka:
  client:
    enabled: false